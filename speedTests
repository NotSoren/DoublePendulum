soren@theSentinel:~/DoublePendulumDev$ pypy imgGenMPv5.py 32 1 32 0
time: 76.123 s
each: 0.074 s
soren@theSentinel:~/DoublePendulumDev$ pypy imgGenMPv4.py 32 1 32 0
time: 0.915 s
each: 0.00089 s

v4 is ~80x faster than v5 when using pypy3.6.0

soren@theSentinel:~/DoublePendulumDev$ py3 imgGenMPv5.py 32 1 32 0
time: 12.021 s
each: 0.012 s
soren@theSentinel:~/DoublePendulumDev$ py3 imgGenMPv4.py 32 1 32 0
time: 2.608 s
each: 0.00255 s

v4 is ~3x faster than v5 when using cpython3.6

pypy3.6.0 is ~2.5x faster than cpython3.6 in imgGenMPv4.py on a 32x32 image


soren@theSentinel:~/DoublePendulumDev$ pypy imgGenMPv4.py 64 1 32 0
time: 1.488 s
each: 0.00036 s
soren@theSentinel:~/DoublePendulumDev$ py3 imgGenMPv4.py 64 1 32 0
time: 9.198 s
each: 0.00225 s

pypy3.6.0 is ~6x faster than cpython3.6 in imgGenMPv4.py on a 64x64 image


soren@theSentinel:~/DoublePendulumDev$ pypy imgGenMPv4.py 128 1 32 0
time: 4.154 s
each: 0.00025 s
soren@theSentinel:~/DoublePendulumDev$ py3 imgGenMPv4.py 128 1 32 0
time: 38.408 s
each: 0.00234 s

pypy3.6.0 is ~9.25x faster than cpython3.6 in imgGenMPv4.py on a 128x128 image



time to calculate 32x32 at a depth of 100000
Initial, with centre exclusion. Python 3.6.8
9m0.870s

Gen4, with centre exclusion, MT, reflection detection. Python 3.6.8
0m5.227s

Gen4, with centre exclusion, MT, reflection detection. PyPy 7.1.0-beta0
0m1.164s

Gen4, with numPy, centre exclusion, MT. Python 3.6.8
0m55.525s
